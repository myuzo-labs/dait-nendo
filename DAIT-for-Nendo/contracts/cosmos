```javascript
// Importing required dependencies
const cosmosjs = require("@cosmostation/cosmosjs");

// Define network
const network = cosmosjs.network("https://lcd-cosmos-free.cosmostation.io", "cosmoshub-3");

// Define mnemonic
const mnemonic = "your mnemonic here";

// Define address
const address = cosmosjs.getAddress(mnemonic);

// Define cosmos client
const cosmos = new cosmosjs(address, network);

// Set path
cosmos.setPath("m/44'/118'/0'/0/0");

// Set bech32MainPrefix
cosmos.bech32MainPrefix = "cosmos";

// Set hdPath
cosmos.hdPath = cosmosjs.bip32.fromSeed(cosmosjs.bip39.mnemonicToSeedSync(mnemonic)).derivePath("m/44'/118'/0'/0/0");

// Set fee
const fee = { amount: [{ amount: String(5000), denom: "uatom" }], gas: String(200000) };

// Define message
const msg = {
    type: "cosmos-sdk/MsgSend",
    value: {
        from_address: address,
        to_address: "cosmos recipient address here",
        amount: [{ amount: String(100000), denom: "uatom" }]
    }
};

// Sign and broadcast
cosmos.getAccounts(address).then(data => {
    let stdSignMsg = cosmos.newStdMsg({
        msgs: [msg],
        chain_id: data.result.value.account_number.toString(),
        memo: "",
        account_number: data.result.value.account_number.toString(),
        sequence: data.result.value.sequence.toString()
    });

    cosmos.sign(stdSignMsg).then(signedTx => {
        cosmos.broadcast(signedTx).then(response => console.log(response));
    });
});
```